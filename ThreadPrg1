package threading;

//
//public class ThreadPrg1 implements Runnable {
//	Thread t;
//
//	public void run() {
//		for (int i = 0; i < 4; i++) {
//			System.out.println(Thread.currentThread().getName() + " " + i);
//			try {
//				Thread.sleep(1000); // thread to sleep for 1000 milliseconds
//			} catch (Exception e) {
//				System.out.println(e);
//			}
//		}
//	}
//
//	public static void main(String[] args) throws Exception {
//		Thread t = new Thread(new ThreadPrg1());
//		t.start();
//		Thread t2 = new Thread(new ThreadPrg1());
//		t2.start();
//	}
//}

//class MyThread extends Thread {
//	public void run() {
//		for (int i = 0; i < 5; i++)
//			System.out.println(Thread.currentThread().getName() + " in control");
//	}
//}
//
//public class ThreadPrg1 {
//	public static void main(String[] args) {
//		MyThread t = new MyThread();
//		t.start();
//		for (int i = 0; i < 5; i++) {
//			System.out.println(Thread.currentThread().getName() + " in control");
//			// Control passes to child thread
//			Thread.yield();
//			// After execution of child Thread main thread takes over
//			// System.out.println(Thread.currentThread().getName() +
//			// " in control");
//		}
//	}
//}



public class ThreadPrg1 extends Thread {
	public void run() {
		System.out.println("Start.. " + Thread.currentThread().getName());
		try {
			Thread.sleep(300);
		} catch (InterruptedException ie) {
		}
		System.out.println("End.. " + Thread.currentThread().getName());
	}

	public static void main(String[] args) {
		ThreadPrg1 c1 = new ThreadPrg1();
		ThreadPrg1 c2 = new ThreadPrg1();
		System.out.println("Main Start.. ");
		c1.start();
		try {
			c1.join(); // Waiting for c1 to finish
		} catch (InterruptedException ie) {
		}
		c2.start();
		System.out.println("Main Ends.. ");
	}
}
