package threading;

//
//public class ThreadPrg1 implements Runnable {
//	Thread t;
//
//	public void run() {
//		for (int i = 0; i < 4; i++) {
//			System.out.println(Thread.currentThread().getName() + " " + i);
//			try {
//				Thread.sleep(1000); // thread to sleep for 1000 milliseconds
//			} catch (Exception e) {
//				System.out.println(e);
//			}
//		}
//	}
//
//	public static void main(String[] args) throws Exception {
//		Thread t = new Thread(new ThreadPrg1());
//		t.start();
//		Thread t2 = new Thread(new ThreadPrg1());
//		t2.start();
//	}
//}

class MyThread extends Thread {
	public void run() {
		for (int i = 0; i < 5; i++)
			System.out.println(Thread.currentThread().getName() + " in control");
	}
}

public class ThreadPrg1 {
	public static void main(String[] args) {
		MyThread t = new MyThread();
		t.start();
		for (int i = 0; i < 5; i++) {
			System.out.println(Thread.currentThread().getName() + " in control");
			// Control passes to child thread
			Thread.yield();
			// After execution of child Thread main thread takes over
			// System.out.println(Thread.currentThread().getName() +
			// " in control");
		}
	}
}
